{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPS-BoldMT;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red69\green178\blue86;\red252\green186\blue20;
\red0\green0\blue0;\red252\green186\blue20;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c32157\c73725\c41176;\cssrgb\c99608\c77255\c8235;
\cssrgb\c0\c0\c0;\cssrgb\c99608\c77255\c8235;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
Buble sort:
\f1\b0 \
\
do\
\'a0\'a0
\f0\b swapped\'a0
\f1\b0 = false\
\'a0\'a0for i = 1 to indexOfLastUnsortedElement-1\
\'a0\'a0\'a0\'a0if leftElement > rightElement\
\'a0\'a0\'a0\'a0\'a0\'a0swap(leftElement, rightElement)\
\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b swapped\'a0
\f1\b0 = true;\'a0
\f0\b ++swapCounter
\f1\b0 \
while\'a0
\f0\b swapped
\f1\b0 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb4 \

\f0\b Selection sort:
\f1\b0 \
\
repeat (numOfElements - 1) times\
\'a0\'a0set the first unsorted element as the minimum\
\'a0\'a0for each of the unsorted elements\
\'a0\'a0\'a0\'a0if element < currentMinimum\
\'a0\'a0\'a0\'a0\'a0\'a0set element as new minimum\
\pard\pardeftab720\partightenfactor0
\cf2 \cb5 \'a0\'a0swap minimum with first unsorted position\
\
\pard\pardeftab720\partightenfactor0

\f0\b \cf0 \cb4 Insertion sort:
\f1\b0 \cb4 \
\
mark first element as sorted\
for each unsorted element X\
\'a0\'a0'extract' the element X\
\pard\pardeftab720\partightenfactor0
\cf2 \cb5 \'a0\'a0for j = lastSortedIndex down to 0\
\pard\pardeftab720\partightenfactor0
\cf0 \cb4 \'a0\'a0\'a0\'a0if current element j > X\
\'a0\'a0\'a0\'a0\'a0\'a0move sorted element to the right by 1\
\'a0\'a0\'a0\'a0break loop and insert X here\
\
\pard\pardeftab720\partightenfactor0

\f0\b \cf0 \cb6 \outl0\strokewidth0 \strokec5 Merge sort:
\f1\b0 \
\
split each element into partitions of size 1\
recursively merge adjacent partitions\
\'a0\'a0for i = leftPartIdx to rightPartIdx\
\'a0\'a0\'a0\'a0if leftPartHeadValue <= rightPartHeadValue\
\'a0\'a0\'a0\'a0\'a0\'a0copy leftPartHeadValue\
\'a0\'a0\'a0\'a0else: copy rightPartHeadValue; Increase InvIdx\
copy elements back to original array\
\pard\pardeftab720\partightenfactor0
\cf0 \cb4 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf0 \cb6 \outl0\strokewidth0 \strokec5 Quick sort:
\f1\b0 \
\
for each (unsorted) partition\
set first element as pivot\
\'a0\'a0storeIndex = pivotIndex+1\
\'a0\'a0for i = pivotIndex+1 to rightmostIndex\
\'a0\'a0\'a0\'a0if ((a[i] < a[pivot]) or (equal but 50% lucky))\
\'a0\'a0\'a0\'a0\'a0\'a0swap(i, storeIndex); ++storeIndex\
\'a0\'a0swap(pivot, storeIndex-1)\
}